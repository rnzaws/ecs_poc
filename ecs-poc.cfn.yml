---
AWSTemplateFormatVersion: '2010-09-09'

# Any code, applications, scripts, templates, proofs of concept,
# documentation and other items are provided for illustration purposes only.
#
# Copyright 2017 Amazon Web Services
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.  # You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


Parameters:

  TemplateBucket:
    Type: String

  Repo404Branch:
    Type: String
    Default: "master"

  RepoPhpHelloBranch:
    Type: String
    Default: "master"

  Service404DesiredCount:
    Type: Number
    Default: 2

  ServicePhpHelloDesiredCount:
    Type: Number
    Default: 2

  GitHubToken:
    Type: String

  GitHubUser:
    Type: String

  BuildDockerImage:
    Type: String
    Default: "aws/codebuild/docker:1.12.1"

  LogRetentionInDays:
    Type: Number
    Default: 7

  InstanceKeyName:
    Description: "EC2 key pair name for bastion host and ECS instance SSH access"
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: "Key pair name can contain only ASCII characters"

  SshFrom:
    Description: Limit SSH access to bastion hosts to a CIDR IP block
    Type: String
    MinLength: 9
    Default: "0.0.0.0/0"

Mappings:

  BastionHostAmiMap:  # Amazon Linux AMI
    ap-northeast-1:
      Ami: ami-4af5022c
    ap-southeast-1:
      Ami: ami-fdb8229e
    ap-southeast-2:
      Ami: ami-30041c53
    eu-west-1:
      Ami: ami-ebd02392
    eu-west-2:
      Ami: ami-489f8e2c
    eu-central-1:
      Ami: ami-657bd20a
    us-east-1:
      Ami: ami-4fffc834
    us-east-2:
      Ami: ami-ea87a78f
    us-west-1:
      Ami: ami-3a674d5a
    us-west-2:
      Ami: ami-aa5ebdd2
    ca-central-1:
      Ami: ami-5ac17f3e

  EcsAmiMap:  # Amazon Linux ECS AMI - http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html
    ap-northeast-1:
      Ami: ami-ab5ea9cd
    ap-southeast-1:
      Ami: ami-ae0b91cd
    ap-southeast-2:
      Ami: ami-c3233ba0
    eu-west-1:
      Ami: ami-bd7e8dc4
    eu-west-2:
      Ami: ami-0a85946e
    eu-central-1:
      Ami: ami-f15ff69e
    us-east-1:
      Ami: ami-d61027ad
    us-east-2:
      Ami: ami-bb8eaede
    us-west-1:
      Ami: ami-514e6431
    us-west-2:
      Ami: ami-c6f81abe
    ca-central-1:
      Ami: ami-32bb0556

Resources:

  Vpc:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/vpc.cfn.yml"

  CiRepository:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/ci-repository.cfn.yml"

  Bastion:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/bastion.cfn.yml"
      Parameters:
        VpcStackName: !GetAtt Vpc.Outputs.Name
        InstanceKeyName: !Ref InstanceKeyName
        BastionAmiId: !FindInMap [BastionHostAmiMap, !Ref "AWS::Region", Ami]
        SshFrom: !Ref SshFrom
    DependsOn:
      - Vpc

  ApplicationLoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/load-balancer.cfn.yml"
      Parameters:
        VpcStackName: !GetAtt Vpc.Outputs.Name
    DependsOn:
      - Vpc

  EcsCluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/ecs-cluster.cfn.yml"
      Parameters:
        VpcStackName: !GetAtt Vpc.Outputs.Name
        AlbStackName: !GetAtt ApplicationLoadBalancer.Outputs.Name
        BastionStackName: !GetAtt Bastion.Outputs.Name
        InstanceKeyName: !Ref InstanceKeyName
        EcsAmiId: !FindInMap [EcsAmiMap, !Ref "AWS::Region", Ami]
    DependsOn:
      - Vpc
      - ApplicationLoadBalancer
      - Bastion

  SystemKinesis:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/system-kinesis.cfn.yml"

  TaskRoles:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/task-roles.cfn.yml"
      Parameters:
        SystemKinesisStackName: !GetAtt SystemKinesis.Outputs.Name
    DependsOn:
      - SystemKinesis

  Service404CiCd:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/deployment-pipeline.cfn.yml"
      Parameters:
        SystemKinesisStackName: !GetAtt SystemKinesis.Outputs.Name
        GitHubSourceRepo: 404
        GitHubBranch: !Ref Repo404Branch
        DesiredCount: !Ref Service404DesiredCount
        GitHubToken: !Ref GitHubToken
        GitHubUser: !Ref GitHubUser
        BuildDockerImage: !Ref BuildDockerImage
        TemplateBucket: !Ref TemplateBucket
        EcsClusterStackName: !GetAtt EcsCluster.Outputs.Name
        TaskRoleStackName: !GetAtt TaskRoles.Outputs.Name
        LogRetentionInDays: !Ref LogRetentionInDays
        VpcStackName: !GetAtt Vpc.Outputs.Name
        AlbStackName: !GetAtt ApplicationLoadBalancer.Outputs.Name
        CiRepositoryStackName: !GetAtt CiRepository.Outputs.Name
    DependsOn:
      - Vpc
      - CiRepository
      - ApplicationLoadBalancer
      - TaskRoles
      - EcsCluster

  ServicePhpHelloCiCd:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/deployment-pipeline.cfn.yml"
      Parameters:
        SystemKinesisStackName: !GetAtt SystemKinesis.Outputs.Name
        GitHubSourceRepo: php-hello
        GitHubBranch: !Ref RepoPhpHelloBranch
        DesiredCount: !Ref ServicePhpHelloDesiredCount
        GitHubToken: !Ref GitHubToken
        GitHubUser: !Ref GitHubUser
        BuildDockerImage: !Ref BuildDockerImage
        TemplateBucket: !Ref TemplateBucket
        EcsClusterStackName: !GetAtt EcsCluster.Outputs.Name
        TaskRoleStackName: !GetAtt TaskRoles.Outputs.Name
        LogRetentionInDays: !Ref LogRetentionInDays
        VpcStackName: !GetAtt Vpc.Outputs.Name
        AlbStackName: !GetAtt ApplicationLoadBalancer.Outputs.Name
        CiRepositoryStackName: !GetAtt CiRepository.Outputs.Name
    DependsOn:
      - Vpc
      - CiRepository
      - ApplicationLoadBalancer
      - TaskRoles
      - EcsCluster

Outputs:

  VpcStackName:
    Value: !GetAtt Vpc.Outputs.Name
    Export:
      Name: !Sub "${AWS::StackName}-vpc-stack-name"

  CiRepositoryStackName:
    Value: !GetAtt CiRepository.Outputs.Name
    Export:
      Name: !Sub "${AWS::StackName}-ci-repository-stack-name"

  BastionStackName:
    Value: !GetAtt Bastion.Outputs.Name
    Export:
      Name: !Sub "${AWS::StackName}-bastion-stack-name"

  ApplicationLoadBalancerStackName:
    Value: !GetAtt ApplicationLoadBalancer.Outputs.Name
    Export:
      Name: !Sub "${AWS::StackName}-alb-stack-name"

  EcsClusterStackName:
    Value: !GetAtt EcsCluster.Outputs.Name
    Export:
      Name: !Sub "${AWS::StackName}-ecs-cluster-stack-name"

  SystemKinesisStackName:
    Value: !GetAtt SystemKinesis.Outputs.Name
    Export:
      Name: !Sub "${AWS::StackName}-system-kinesis-stack-name"

  TaskRolesStackName:
    Value: !GetAtt TaskRoles.Outputs.Name
    Export:
      Name: !Sub "${AWS::StackName}-task-roles-stack-name"
